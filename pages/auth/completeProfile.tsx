import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { FaMale, FaFemale } from "react-icons/fa";
import keyGen from "@utils/genKey";
import { useRouter } from "next/router";
import TextField from "@components/EditableTextField";
import ThemeSwitch from "@components/ThemeSwitch";
import { useForm } from "react-hook-form";

type FormData = {
  firstName: string;
  lastName: string;
  dateOfBirth: string;
  gender: string;
  postcode: number;
  addressLine: string;
  city: string;
};

enum ACTIONS {
  SET_IDENTIFIER,
  SET_PASSWORD,
  SET_ERROR,
  RESET_ERROR,
}

interface LoginInterface {
  identifier: string;
  password: string;
  error?: string;
}
interface ActionType {
  type: ACTIONS;
  payload?: string;
}

const initState: LoginInterface = {
  identifier: "",
  password: "",
  error: undefined,
};

const reducer = (prevState: LoginInterface, action: ActionType): LoginInterface => {
  switch (action.type) {
    case ACTIONS.SET_IDENTIFIER:
      if (action.payload !== undefined) return { ...prevState, identifier: action.payload };
      return prevState;

    case ACTIONS.SET_PASSWORD:
      if (action.payload !== undefined) return { ...prevState, password: action.payload };
      return prevState;

    case ACTIONS.SET_ERROR:
      if (action.payload !== undefined) return { ...prevState, error: action.payload };
      return prevState;
    case ACTIONS.RESET_ERROR:
      return { ...prevState, error: undefined };
    default:
      throw new Error("No reducer found for this action: " + ACTIONS[action.type]);
  }
};

const CompleteProfile: React.FC = () => {
  const [state, dispatch] = React.useReducer(reducer, initState);
  const router = useRouter();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<FormData>();

  const onSubmit = (data: FormData) => {
    console.log(data);
  };

  return (
    <div className="flex flex-col items-center justify-center gap-5">
      <Head>
        <title>Britjobs | Complete Your Profile</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div className="card bg-base-200 relative mt-10 w-full max-w-7xl rounded-3xl p-10">
        <div className="h-48 w-48 rounded-full bg-white"></div>
        <div className="absolute top-10 right-10">
          <ThemeSwitch />
        </div>
      </div>
      <div className="card w-full max-w-7xl rounded-3xl p-10 px-24">
        <form className="flex flex-col" onSubmit={handleSubmit(onSubmit)}>
          <div className="grid grid-cols-2 gap-5">
            <h1 className=" col-span-full mb-5 text-4xl">Personal Details</h1>
            <div className="form-control w-full max-w-lg">
              <label className="label">
                <span className="label-text">First Name *</span>
              </label>
              <input
                {...register("firstName")}
                type="text"
                placeholder="Enter your First Name"
                className="input bg-base-200 w-full"
              />
            </div>

            <div className="form-control w-full max-w-lg">
              <label className="label">
                <span className="label-text">Last Name *</span>
              </label>
              <input
                {...register("lastName")}
                type="text"
                placeholder="Enter your Last Name"
                className="input bg-base-200 w-full"
              />
            </div>

            <div className="form-control w-full max-w-lg">
              <label className="label">
                <span className="label-text">Date of Birth *</span>
              </label>
              <input
                {...register("dateOfBirth")}
                type="date"
                className="input bg-base-200 w-full"
              />
            </div>

            <div className="form-control w-full max-w-lg flex-row items-center gap-5">
              <label className="label">
                <span className="label-text">Gender *</span>
              </label>
              <label htmlFor="male" className="relative">
                <input
                  {...register("gender")}
                  type="radio"
                  className="radio checked:bg-base-200 h-16 w-16 rounded-xl border-0"
                  name="gender"
                  value="male"
                  id="male"
                />
                <FaMale className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 cursor-pointer text-4xl" />
              </label>
              <label htmlFor="felmale" className="relative">
                <input
                  {...register("gender")}
                  type="radio"
                  className="radio checked:bg-base-200 h-16 w-16 rounded-xl border-0 "
                  name="gender"
                  value="female"
                  id="felmale"
                />
                <FaFemale className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 cursor-pointer text-4xl" />
              </label>
            </div>

            <div className="divider col-start-1 col-end-3"></div>

            <h1 className=" col-span-full mb-5 text-4xl">Address</h1>
            <div className="form-control w-full max-w-lg">
              <label className="label">
                <span className="label-text">Postcode *</span>
              </label>
              <input
                {...register("postcode")}
                type="number"
                placeholder="Enter your Postcode"
                className="input bg-base-200 w-full"
              />
            </div>

            <div></div>

            <div className="form-control col-span-full w-full">
              <label className="label">
                <span className="label-text">Address Line *</span>
              </label>
              <input
                {...register("addressLine")}
                type="text"
                placeholder="Enter your Address Line"
                className="input bg-base-200 w-full"
              />
            </div>

            <div className="form-control w-full max-w-lg">
              <label className="label">
                <span className="label-text">City *</span>
              </label>
              <input
                {...register("city")}
                type="text"
                placeholder="Enter your City"
                className="input bg-base-200 w-full"
              />
            </div>
          </div>
          <button className="btn btn-primary mt-10 w-full max-w-sm self-end" type="submit">
            Save
          </button>
        </form>
      </div>
    </div>
  );
};

export default CompleteProfile;
